{
	"tables": {
		"62498fe2-f963-485a-ba03-e0886cd8f8c5": {
			"id": "62498fe2-f963-485a-ba03-e0886cd8f8c5",
			"visible": true,
			"name": "configuration",
			"desc": "Tenant-specific Slack channel configurations that define where and how messages should be delivered. Each configuration maps a unique code to a Slack channel and message template for a specific tenant.",
			"estimatedSize": "",
			"cols": [
				{
					"id": "57feda74-6175-472a-b0c0-92cccce780df",
					"name": "code",
					"datatype": "VARCHAR",
					"param": "20",
					"pk": true,
					"nn": true,
					"fk": false,
					"comment": "Unique identifier for the configuration within a tenant. Used by other services to reference this specific Slack delivery configuration.",
					"defaultvalue": "",
					"data": "payment-notifications",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "245ee1cc-d69e-4de5-8173-bfe56e39a8d6",
					"name": "name",
					"datatype": "VARCHAR",
					"param": "60",
					"pk": false,
					"nn": true,
					"fk": false,
					"comment": "Human-readable display name for the configuration, used in admin interfaces and documentation.",
					"defaultvalue": "",
					"data": "Payment Notifications",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "d20fb403-4c46-4c76-aeac-8d2d0588c525",
					"name": "description",
					"datatype": "VARCHAR",
					"param": "255",
					"pk": false,
					"nn": false,
					"fk": false,
					"comment": "Detailed explanation of what this configuration is used for and when messages should be sent.",
					"defaultvalue": "",
					"data": "Sends notifications to the finance team when payments are processed or fail",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "84b39ddc-596e-4edd-ac72-bb1bd1ecf2b5",
					"name": "active",
					"datatype": "BOOLEAN",
					"param": "",
					"pk": false,
					"nn": false,
					"fk": false,
					"comment": "Flag indicating whether this configuration is currently enabled for message delivery. Inactive configurations will not send messages.",
					"defaultvalue": "",
					"data": "true",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "792d9b0b-3549-491b-a749-d450d00b2536",
					"name": "channel",
					"datatype": "VARCHAR",
					"param": "60",
					"pk": false,
					"nn": true,
					"fk": false,
					"comment": "Target Slack channel ID or name where messages using this configuration will be delivered.",
					"defaultvalue": "",
					"data": "#finance-alerts",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "c672e1ad-8641-4e83-95f6-d4038e368a64",
					"name": "template_code",
					"datatype": "VARCHAR",
					"param": "20",
					"pk": false,
					"nn": true,
					"fk": true,
					"comment": "Reference to the message template code that defines the format and content structure for messages sent through this configuration.",
					"defaultvalue": "",
					"data": "payment-alert-template",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "0cab84ee-b8ff-472f-992b-b23edff1d7b9",
					"name": "slack_key",
					"datatype": "VARCHAR",
					"param": "120",
					"pk": false,
					"nn": true,
					"fk": false,
					"comment": "",
					"defaultvalue": "",
					"data": "",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				}
			],
			"relations": [
				"650d4ec3-1216-4539-96dc-011bb3c43307"
			],
			"lines": [],
			"keys": [
				{
					"id": "d31c88ea-bd5d-40c1-9a5b-b8f2fa6a6ab5",
					"name": "PRIMARY",
					"isPk": true,
					"cols": [
						{
							"id": "17025115-e5a9-4d95-914c-2688db00f9e9",
							"colid": "57feda74-6175-472a-b0c0-92cccce780df"
						}
					]
				}
			],
			"indexes": [
				{
					"id": "c7b7a89d-032a-428c-a52a-5431054d4c45",
					"name": "configuration_ix_code",
					"unique": false,
					"fulltext": true,
					"using": "na",
					"algorithm": "na",
					"lockoption": "na",
					"cols": [
						{
							"id": "f3305912-0a67-4f6c-8ff9-2f9b96b17e98",
							"colid": "57feda74-6175-472a-b0c0-92cccce780df",
							"mariadb": {
								"desc": false
							}
						}
					]
				},
				{
					"id": "48f606cc-fb32-4286-9561-983a529e622a",
					"name": "configuration_ix_name",
					"unique": false,
					"fulltext": true,
					"using": "na",
					"algorithm": "na",
					"lockoption": "na",
					"cols": [
						{
							"id": "281be8cf-ebd0-406b-8717-38ded4c9ba81",
							"colid": "245ee1cc-d69e-4de5-8173-bfe56e39a8d6",
							"mariadb": {
								"desc": false
							}
						}
					]
				}
			],
			"embeddable": false,
			"generate": true,
			"generateCustomCode": true,
			"customCode": "",
			"tabletype": "InnoDB",
			"collation": "utf8mb4_general_ci",
			"charset": "utf8mb4",
			"rowformat": "",
			"database": "starter",
			"initautoinc": "",
			"temporary": false,
			"ifnotexists": false
		},
		"537a9291-bc37-4156-aab6-aeeda7d935b7": {
			"id": "537a9291-bc37-4156-aab6-aeeda7d935b7",
			"visible": true,
			"name": "template",
			"desc": "Reusable message templates that define the structure and format of Slack messages. Templates use placeholders that are dynamically replaced with data from message payloads.",
			"estimatedSize": "",
			"cols": [
				{
					"id": "1f63815e-300d-4f27-b4cd-308b6557db68",
					"name": "code",
					"datatype": "VARCHAR",
					"param": "20",
					"pk": true,
					"nn": true,
					"fk": false,
					"comment": "Unique identifier for the template. Referenced by configurations to determine which template to use for message rendering.",
					"defaultvalue": "",
					"data": "payment-alert-template",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "c156d54c-4249-459e-b3d4-78f771c06796",
					"name": "name",
					"datatype": "VARCHAR",
					"param": "60",
					"pk": false,
					"nn": true,
					"fk": false,
					"comment": "Human-readable display name for the template, used in admin interfaces and for template management.",
					"defaultvalue": "",
					"data": "Payment Alert Template",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "4de01d87-7e09-4842-80e2-8dd11436728e",
					"name": "description",
					"datatype": "VARCHAR",
					"param": "255",
					"pk": false,
					"nn": false,
					"fk": false,
					"comment": "Detailed explanation of the template's purpose, use cases, and expected payload structure.",
					"defaultvalue": "",
					"data": "Template for payment processing alerts including status, amount, and customer information",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "1ac435a6-458c-499c-94ca-75877e825056",
					"name": "active",
					"datatype": "BOOLEAN",
					"param": "",
					"pk": false,
					"nn": false,
					"fk": false,
					"comment": "Flag indicating whether this template is currently available for use. Inactive templates cannot be used for message rendering.",
					"defaultvalue": "",
					"data": "true",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "aacf9d7b-b749-41f0-bec1-dbe97ffc796b",
					"name": "content",
					"datatype": "VARCHAR",
					"param": "",
					"pk": false,
					"nn": true,
					"fk": false,
					"comment": "Markdown-formatted template content with placeholders (e.g., {{variable}}) that will be replaced with actual data during message rendering.",
					"defaultvalue": "",
					"data": "🔔 **Payment Alert**\\n\\nCustomer: {{customer.name}}\\nAmount: ${{payment.amount}}\\nStatus: {{payment.status}}",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "1ff610cd-947b-408e-9b7f-3b9986cf1038",
					"name": "schema",
					"datatype": "JSON",
					"param": "",
					"pk": false,
					"nn": true,
					"fk": false,
					"comment": "JSON schema that defines the structure and validation rules for the payload data expected by this template.",
					"defaultvalue": "",
					"data": "{\"type\": \"object\", \"properties\": {\"customer\": {\"type\": \"object\", \"properties\": {\"name\": {\"type\": \"string\"}}}, \"payment\": {\"type\": \"object\", \"properties\": {\"amount\": {\"type\": \"number\"}, \"status\": {\"type\": \"string\"}}}}}",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				}
			],
			"relations": [
				"650d4ec3-1216-4539-96dc-011bb3c43307"
			],
			"lines": [],
			"keys": [
				{
					"id": "11c6c6c2-afbe-4e3a-920a-cebc0de51b60",
					"name": "PRIMARY",
					"isPk": true,
					"cols": [
						{
							"id": "f913c774-d0f4-4a4e-ae27-b05093fad947",
							"colid": "1f63815e-300d-4f27-b4cd-308b6557db68"
						}
					]
				}
			],
			"indexes": [
				{
					"id": "ae1f9954-fd03-4cc9-b7f8-ab93196d7ec8",
					"name": "template_ix_code",
					"unique": false,
					"fulltext": true,
					"using": "na",
					"algorithm": "na",
					"lockoption": "na",
					"cols": [
						{
							"id": "d86b7a31-558b-4b56-8dda-1be6efe68fa2",
							"colid": "1f63815e-300d-4f27-b4cd-308b6557db68",
							"mariadb": {
								"desc": false
							}
						}
					]
				},
				{
					"id": "28a0561f-1a24-4197-8da6-05f8335a3abb",
					"name": "template_ix_name",
					"unique": false,
					"fulltext": true,
					"using": "na",
					"algorithm": "na",
					"lockoption": "na",
					"cols": [
						{
							"id": "292171b0-b95f-4e39-aa24-1ddcffb46e5d",
							"colid": "c156d54c-4249-459e-b3d4-78f771c06796",
							"mariadb": {
								"desc": false
							}
						}
					]
				}
			],
			"embeddable": false,
			"generate": true,
			"generateCustomCode": true,
			"customCode": "",
			"tabletype": "InnoDB",
			"collation": "utf8mb4_general_ci",
			"charset": "utf8mb4",
			"rowformat": "",
			"database": "starter",
			"initautoinc": "",
			"temporary": false,
			"ifnotexists": false
		},
		"99dc029f-a304-4789-b8c3-8d2ae64538e5": {
			"id": "99dc029f-a304-4789-b8c3-8d2ae64538e5",
			"visible": true,
			"name": "message",
			"desc": "Individual Slack message records that track the complete lifecycle of each message from creation to delivery. Provides audit trail and delivery status monitoring.",
			"estimatedSize": "",
			"cols": [
				{
					"id": "80f7a00a-8401-49d1-bcd0-c2f82a3704b9",
					"name": "id",
					"datatype": "VARCHAR",
					"param": "",
					"pk": true,
					"nn": true,
					"fk": false,
					"comment": "Unique identifier for the message record, typically a UUID generated when the message is initially created.",
					"defaultvalue": "uuid()",
					"data": "550e8400-e29b-41d4-a716-446655440000",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "04c8ddb6-9214-4fd7-a3ec-f22cb17f64cd",
					"name": "config_code",
					"datatype": "VARCHAR",
					"param": "20",
					"pk": false,
					"nn": true,
					"fk": false,
					"comment": "Reference to the configuration code that was used to determine the delivery channel and template for this message.",
					"defaultvalue": "",
					"data": "payment-notifications",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "54135a90-ddc1-4706-905b-66b3d3581bef",
					"name": "channel",
					"datatype": "VARCHAR",
					"param": "255",
					"pk": false,
					"nn": true,
					"fk": false,
					"comment": "The actual Slack channel ID or name where this message was sent or is scheduled to be sent.",
					"defaultvalue": "",
					"data": "#finance-alerts",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "f5c1b872-2bb5-48b7-a82a-1ff1ceb0e96f",
					"name": "template_code",
					"datatype": "VARCHAR",
					"param": "60",
					"pk": false,
					"nn": false,
					"fk": false,
					"comment": "Reference to the template code that was used to render the final message content.",
					"defaultvalue": "",
					"data": "payment-alert-template",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "cf794376-62d1-4e6c-971d-8f1c76fd2bd2",
					"name": "payload",
					"datatype": "JSON",
					"param": "",
					"pk": false,
					"nn": false,
					"fk": false,
					"comment": "The original data payload that was provided when the message was requested, used for template rendering and audit purposes.",
					"defaultvalue": "",
					"data": "{\"customer\": {\"name\": \"John Doe\", \"id\": \"12345\"}, \"payment\": {\"amount\": 150.00, \"status\": \"completed\", \"id\": \"pay_123\"}}",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "b6a4dcce-009b-42c3-914a-7b318541de7d",
					"name": "rendered_message",
					"datatype": "TEXT",
					"param": "",
					"pk": false,
					"nn": false,
					"fk": false,
					"comment": "The final rendered message content after template processing, exactly as it was sent to Slack.",
					"defaultvalue": "",
					"data": "🔔 **Payment Alert**\\n\\nCustomer: John Doe\\nAmount: $150.00\\nStatus: completed",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "4d862233-be16-4827-ae08-1c5970d1343d",
					"name": "status",
					"datatype": "ENUM",
					"param": "",
					"pk": false,
					"nn": true,
					"fk": false,
					"comment": "Current delivery status of the message. Possible values: PENDING, SCHEDULED, PROCESSING, SENT, FAILED, CANCELLED.",
					"defaultvalue": "",
					"data": "pending",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "pending,sent,failed,scheduled,retrying",
					"estimatedSize": ""
				},
				{
					"id": "873839d6-b449-495c-ab36-2c04dad28a32",
					"name": "scheduled_at",
					"datatype": "DATETIME",
					"param": "",
					"pk": false,
					"nn": false,
					"fk": false,
					"comment": "Optional timestamp when the message is scheduled to be delivered. Null for immediate delivery messages.",
					"defaultvalue": "",
					"data": "2025-08-01T15:30:00Z",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "f4561d34-5aa1-4a0b-be8b-4dabea4a5a7b",
					"name": "sent_at",
					"datatype": "DATETIME",
					"param": "",
					"pk": false,
					"nn": false,
					"fk": false,
					"comment": "Timestamp when the message was successfully delivered to Slack. Null if not yet sent or failed.",
					"defaultvalue": "",
					"data": "2025-08-01T10:15:23Z",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "4cb67184-2cc1-4046-9a08-ee062e6c094d",
					"name": "failure_reason",
					"datatype": "VARCHAR",
					"param": "",
					"pk": false,
					"nn": false,
					"fk": false,
					"comment": "Detailed error message or reason if the message delivery failed. Null for successful deliveries.",
					"defaultvalue": "",
					"data": "Slack API rate limit exceeded. Will retry in 60 seconds.",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "d52685a8-a620-4951-967b-04775c783a9a",
					"name": "correlation_id",
					"datatype": "VARCHAR",
					"param": "100",
					"pk": false,
					"nn": false,
					"fk": false,
					"comment": "Optional correlation identifier that can be used to trace this message across distributed systems and logs.",
					"defaultvalue": "",
					"data": "req_abc123def456",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "3b4a9a3e-6e0c-4047-87c7-12afe175f011",
					"name": "retry_count",
					"datatype": "INT",
					"param": "",
					"pk": false,
					"nn": true,
					"fk": false,
					"comment": "Number of delivery attempts made for this message. Starts at 0 and increments with each retry.",
					"defaultvalue": "0",
					"data": "2",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "d9716d0a-eb32-4993-b9b6-e0940a87ce9d",
					"name": "created_at",
					"datatype": "DATETIME",
					"param": "",
					"pk": false,
					"nn": true,
					"fk": false,
					"comment": "Timestamp with time zone when the message record was initially created in the system.",
					"defaultvalue": "",
					"data": "2025-08-01T10:00:00Z",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				},
				{
					"id": "17ba4405-0551-4691-8ec8-48fbc8fabe1f",
					"name": "updated_at",
					"datatype": "DATETIME",
					"param": "",
					"pk": false,
					"nn": true,
					"fk": false,
					"comment": "Timestamp with time zone when the message record was last modified, typically updated when status changes.",
					"defaultvalue": "",
					"data": "2025-08-01T10:15:23Z",
					"after": "",
					"autoinc": false,
					"collation": "",
					"charset": "",
					"binary": false,
					"zerofill": false,
					"unsigned": false,
					"enum": "",
					"estimatedSize": ""
				}
			],
			"relations": [],
			"lines": [],
			"keys": [
				{
					"id": "af001ea5-5f5f-4f2b-a5fe-2e2c1d7de2f8",
					"name": "PRIMARY",
					"isPk": true,
					"cols": [
						{
							"id": "dbb43189-d2cd-4979-a65f-cb199a3108fc",
							"colid": "80f7a00a-8401-49d1-bcd0-c2f82a3704b9"
						}
					]
				}
			],
			"indexes": [
				{
					"id": "1aaf7f1f-bfc4-45a7-ac86-8f6f47bec8bf",
					"name": "message_ix_channel",
					"unique": false,
					"fulltext": false,
					"using": "na",
					"algorithm": "na",
					"lockoption": "na",
					"cols": [
						{
							"id": "e63ba121-196b-4902-b183-b2f1a92b75bb",
							"colid": "54135a90-ddc1-4706-905b-66b3d3581bef",
							"mariadb": {
								"desc": false
							}
						}
					]
				}
			],
			"embeddable": false,
			"generate": true,
			"generateCustomCode": true,
			"customCode": "",
			"tabletype": "InnoDB",
			"collation": "utf8mb4_general_ci",
			"charset": "utf8mb4",
			"rowformat": "",
			"database": "service",
			"initautoinc": "",
			"temporary": false,
			"ifnotexists": false
		}
	},
	"relations": {
		"650d4ec3-1216-4539-96dc-011bb3c43307": {
			"id": "650d4ec3-1216-4539-96dc-011bb3c43307",
			"name": "template_configuration",
			"desc": "",
			"type": "identifying",
			"parent_key": "11c6c6c2-afbe-4e3a-920a-cebc0de51b60",
			"parent": "537a9291-bc37-4156-aab6-aeeda7d935b7",
			"child": "62498fe2-f963-485a-ba03-e0886cd8f8c5",
			"c_mp": "true",
			"c_mch": "true",
			"c_p": "one",
			"c_ch": "many",
			"c_cp": "",
			"c_cch": "",
			"cols": [
				{
					"id": "824d086e-a543-4b4f-beec-a66d8b70eebf",
					"parentcol": "1f63815e-300d-4f27-b4cd-308b6557db68",
					"childcol": "c672e1ad-8641-4e83-95f6-d4038e368a64"
				}
			],
			"generate": true,
			"generateCustomCode": true,
			"customCode": "",
			"relationColor": "transparent",
			"linegraphics": "default"
		}
	},
	"notes": {},
	"lines": {},
	"model": {
		"color": "transparent",
		"activeDiagram": "914a25f8-2e60-46c0-a2cf-907835861077",
		"caseConvention": "under",
		"def_charset": "utf8mb4",
		"def_collation": "utf8mb4_general_ci",
		"def_coltopk": true,
		"def_rowformat": "",
		"def_tabletype": "InnoDB",
		"def_database": "service",
		"desc": "## 🔩 `core-slack` Service\n\n### 📘 Description\n\nThe `core-slack` service is a dedicated messaging microservice responsible for delivering messages to Slack channels or users across the platform. It supports dynamic message templating, multi-tenant configuration, message scheduling, delivery tracking, and retry handling. The service ensures auditability and traceability of every Slack message by persisting domain events in EventStoreDB and maintaining message records in SQL.\n\nThis service acts as the **Slack integration layer** for the platform and can be invoked by other services (e.g., workflows, notifications, alerts) to publish structured messages in a configurable, tenant-aware, and observable manner.\n\n---\n\n### 🌟 Core Responsibilities\n\n* 🍿 **Tenant-Aware Configuration**: Centralized storage of Slack channel mappings and message settings per tenant and code.\n* 🧠 **Template-Driven Messaging**: Dynamic rendering of Slack messages using reusable templates and JSON payloads.\n* 📬 **Reliable Delivery**: Queued delivery of Slack messages with status tracking, retry logic, and failure reason logging.\n* ⏱️ **Message Scheduling**: Optionally schedule Slack messages for future delivery.\n* 📜 **Auditable Event Trail**: All message events are stored in EventStoreDB for full traceability and replayability.\n* 🚦 **Delivery Monitoring**: Real-time and historical tracking of Slack message status, with optional Redis projections for fast access.\n\n---\n\n### 🚰 Backed by Three Data Layers\n\n| Storage          | Purpose                                                  |\n| ---------------- | -------------------------------------------------------- |\n| **SQL**          | Configurations, templates, and message records           |\n| **Redis**        | Optional caching of configs, templates, and status       |\n| **EventStoreDB** | Immutable log of all domain events for message lifecycle |\n\n---\n\n### 📆 Typical Workflow\n\n1. A service issues a `SendSlackMessageCommand` with a tenant, config code, and payload.\n2. The `core-slack` service:\n\n   * Looks up the configuration and template\n   * Validates and renders the message\n   * Emits a `SlackMessageRequestedEvent`\n3. A background worker (via BullMQ) delivers the message via Slack’s API.\n4. The result is recorded via `SlackMessageSentEvent` or `SlackMessageFailedEvent`.\n5. Message status is persisted in SQL, optionally cached in Redis, and visible in monitoring tools.\n\n---\n\n### 🧱 Use Cases\n\n* Notify users of business events (e.g., \"payment completed\", \"loan approved\")\n* Alert operations teams of anomalies or system errors\n* Schedule customer engagement or compliance notifications\n* Integrate with Slack bots or workflows downstream\n",
		"id": "6645c9b2-33b9-4cef-bcf6-5f382e5ff3a6",
		"isDirty": true,
		"name": "slack message service",
		"parentTableInFkCols": true,
		"path": "",
		"replaceSpace": "_",
		"sideSelections": true,
		"storedin": {
			"major": 4,
			"minor": 6,
			"extra": 6
		},
		"type": "MARIADB",
		"version": 1,
		"lastSaved": 1754045245680,
		"beforeScript": "",
		"afterScript": "",
		"sqlSettings": {
			"wrapLines": true,
			"wrapOffset": 80,
			"indent": true,
			"indentationString": "spaces",
			"indentationSize": 2,
			"limitItemsOnLine": true,
			"maxListItemsOnLine": 3,
			"statementDelimiter": ";",
			"routineDelimiter": "//",
			"keywordCase": "upper",
			"identiferCase": "original",
			"includeSchema": "always",
			"quotationExistance": "if_needed"
		},
		"writeFileParam": false,
		"modelHTMLReportDir": "D:\\gs\\cqrs-builder\\tools\\domain\\report",
		"modelPdfReportPath": "D:\\gs\\banking\\gs\\mdt\\gsmdm-person\\tools\\domain\\data\\Masterdata person management.pdf",
		"connectionVersion": "",
		"authorName": "",
		"companyDetails": "",
		"companyUrl": "",
		"synchronizationSettings": {
			"preserveData": "use_temporary_tables",
			"ignoreSystemDefaults": "yes",
			"includeWarnings": "yes",
			"includeCreationSql": "no"
		},
		"laststoredin": {
			"major": 11,
			"minor": 0,
			"extra": 0
		}
	},
	"otherObjects": {},
	"diagrams": {
		"914a25f8-2e60-46c0-a2cf-907835861077": {
			"id": "914a25f8-2e60-46c0-a2cf-907835861077",
			"lineColor": "transparent",
			"description": "this is the main diagram",
			"diagramItems": {
				"62498fe2-f963-485a-ba03-e0886cd8f8c5": {
					"referencedItemId": "62498fe2-f963-485a-ba03-e0886cd8f8c5",
					"x": 154,
					"y": 64,
					"gHeight": 200,
					"gWidth": 246,
					"color": "#ffffff",
					"background": "#03a9f4",
					"resized": false,
					"autoExpand": true,
					"backgroundOpacity": "10",
					"collapsed": false
				},
				"537a9291-bc37-4156-aab6-aeeda7d935b7": {
					"referencedItemId": "537a9291-bc37-4156-aab6-aeeda7d935b7",
					"x": 490,
					"y": 201,
					"gHeight": 182,
					"gWidth": 232,
					"color": "#ffffff",
					"background": "#03a9f4",
					"resized": false,
					"autoExpand": true,
					"backgroundOpacity": "10",
					"collapsed": false
				},
				"99dc029f-a304-4789-b8c3-8d2ae64538e5": {
					"referencedItemId": "99dc029f-a304-4789-b8c3-8d2ae64538e5",
					"x": 142,
					"y": 296,
					"gHeight": 308,
					"gWidth": 247,
					"color": "#ffffff",
					"background": "#03a9f4",
					"resized": false,
					"autoExpand": true,
					"backgroundOpacity": "10",
					"collapsed": false
				}
			},
			"isOpen": true,
			"main": true,
			"name": "Template details",
			"keysgraphics": true,
			"linegraphics": "detailed",
			"zoom": 1,
			"background": "transparent",
			"scroll": {
				"x": 0,
				"y": 0
			},
			"type": "erd",
			"showColumns": true,
			"showColumnDataTypes": true,
			"showSampleData": false,
			"showTableIndexes": true,
			"showTableDescriptions": false,
			"showEstimatedSize": false,
			"showSchemaContainer": true,
			"showEmbeddedInParents": true,
			"showCardinalityCaptions": true,
			"showRelations": true,
			"backgroundImage": "na",
			"descriptionsColor": "transparent",
			"showHorizontal": true,
			"showDescriptions": false,
			"showIndicators": true,
			"showProgress": true,
			"lineWidth": "2",
			"boxSize": "0",
			"showIndicatorCaptions": true,
			"embeddedSpacing": "2",
			"showMainIcon": true,
			"showLabels": true,
			"boxSpacing": "2",
			"boxAlign": "center",
			"showRelationshipNames": false,
			"showLineCaptions": false,
			"showCustomizations": true,
			"showExportDimensions": false,
			"showCompleted": true
		},
		"a9be86f6-8c2b-48f4-a608-f4a42b34552f": {
			"name": "Main Diagram",
			"description": "",
			"id": "a9be86f6-8c2b-48f4-a608-f4a42b34552f",
			"keysgraphics": true,
			"linegraphics": "detailed",
			"zoom": 1,
			"background": "transparent",
			"lineColor": "transparent",
			"isOpen": true,
			"main": false,
			"diagramItems": {},
			"scroll": {
				"x": 0,
				"y": 0
			},
			"type": "erd",
			"showColumns": true,
			"showColumnDataTypes": true,
			"showSampleData": false,
			"showTableIndexes": true,
			"showTableDescriptions": false,
			"showEstimatedSize": false,
			"showSchemaContainer": true,
			"showEmbeddedInParents": true,
			"showCardinalityCaptions": true,
			"showRelations": true,
			"backgroundImage": "na",
			"descriptionsColor": "transparent",
			"showHorizontal": true,
			"showDescriptions": false,
			"showIndicators": true,
			"showProgress": true,
			"lineWidth": "2",
			"boxSize": "0",
			"showIndicatorCaptions": true,
			"embeddedSpacing": "2",
			"showMainIcon": true,
			"showLabels": true,
			"boxSpacing": "2",
			"boxAlign": "center",
			"showRelationshipNames": false,
			"showLineCaptions": false,
			"showCustomizations": false,
			"showExportDimensions": false,
			"showCompleted": true
		}
	},
	"diagramsOrder": [
		"a9be86f6-8c2b-48f4-a608-f4a42b34552f"
	],
	"order": [
		"62498fe2-f963-485a-ba03-e0886cd8f8c5",
		"537a9291-bc37-4156-aab6-aeeda7d935b7",
		"99dc029f-a304-4789-b8c3-8d2ae64538e5",
		"650d4ec3-1216-4539-96dc-011bb3c43307"
	],
	"collapsedTreeItems": [],
	"reverseStats": {}
}