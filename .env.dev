# =============================================================================
# GS-SCAFFOLD DEVELOPMENT ENVIRONMENT CONFIGURATION
# =============================================================================
# This file contains all environment variables used by the application
# Copy to .env for local development or use as reference for deployment
# =============================================================================

# =============================================================================
# RUNTIME ENVIRONMENT
# =============================================================================
# Primary environment detection (overrides NODE_ENV if set)
APP_RUNTIME_ENVIRONMENT=development
NODE_ENV=development

# =============================================================================
# APPLICATION IDENTITY
# =============================================================================
# Application core identity
APP_CORE_NAME=gs-scaffold
APP_CORE_VERSION=0.0.1
APP_VERSION=0.0.1
BUILD_TIMESTAMP=2025-08-16T01:00:00.000Z
INSTANCE_ID=dev-instance-001

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
# Server host and port configuration
APP_SERVER_HOST=localhost
APP_SERVER_PORT=3010
APP_SERVER_PROTOCOL=http
APP_SERVER_PUBLIC_URL=http://localhost:3010
APP_SERVER_STAGING_URL=https://staging.gs-scaffold.com

# =============================================================================
# INFRASTRUCTURE DETECTION
# =============================================================================
# Container and infrastructure environment hints
INFRA_KUBERNETES_SERVICE_HOST=
INFRA_CONTAINER_HOST=
INFRA_CONTAINER_DOCKER_ENABLED=false
INFRA_SYSTEM_HOSTNAME=

# =============================================================================
# DATABASE CONFIGURATION (PostgreSQL)
# =============================================================================
# Primary connection (use URL OR individual settings)
DATABASE_POSTGRES_URL=postgresql://postgres:postgres@localhost:5432/gs_scaffold_dev
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/gs_scaffold_dev

# Individual connection settings (alternative to URL)
DATABASE_POSTGRES_HOST=localhost
DATABASE_POSTGRES_PORT=5432
DATABASE_POSTGRES_NAME=gs_scaffold_dev
DATABASE_POSTGRES_USER=postgres
DATABASE_POSTGRES_PASSWORD=postgres
DATABASE_POSTGRES_SCHEMA=gs_scaffold_read

# Database performance and timeout settings
DATABASE_POSTGRES_SLOW_QUERY_THRESHOLD=500
DATABASE_POSTGRES_STATEMENT_TIMEOUT=15000
DATABASE_POSTGRES_CONNECT_TIMEOUT=10000

# Database SSL configuration
DATABASE_POSTGRES_SSL_ENABLED=false
DATABASE_POSTGRES_SSL_REJECT_UNAUTHORIZED=true

# Connection pool settings
DATABASE_POSTGRES_POOL_MIN=0
DATABASE_POSTGRES_POOL_MAX=10

# Database logging
DATABASE_POSTGRES_LOGGING=true
DATABASE_POSTGRES_LOG_LEVEL=warn

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Core logging settings
LOGGING_CORE_LEVEL=debug
LOGGING_CORE_SINK=stdout
LOGGING_CORE_PRETTY_ENABLED=true

# Loki logging configuration
LOGGING_LOKI_URL=http://localhost:3100
LOGGING_LOKI_BASIC_AUTH=

# Elasticsearch logging configuration
LOGGING_ELASTICSEARCH_NODE=http://localhost:9200
LOGGING_ELASTICSEARCH_INDEX=gs-scaffold-dev-logs

# =============================================================================
# AUTHENTICATION & AUTHORIZATION
# =============================================================================
# Keycloak configuration
AUTH_KEYCLOAK_URL=https://gskeycloak1-u19668.vm.elestio.app
AUTH_KEYCLOAK_REALM=default
AUTH_KEYCLOAK_CLIENT_ID=core-client
AUTH_KEYCLOAK_CLIENT_SECRET=qfUSODB16ZWehQihqsU6zTrQXsXtwWzp

# JWT configuration
AUTH_JWT_AUDIENCE=gs-scaffold-api
AUTH_JWKS_CACHE_MAX_AGE=3600000
AUTH_JWKS_REQUESTS_PER_MINUTE=10
AUTH_JWKS_TIMEOUT_MS=30000

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# CORS configuration
SECURITY_CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
SECURITY_CORS_ALLOW_CREDENTIALS=true

# =============================================================================
# ERROR HANDLING CONFIGURATION
# =============================================================================
# Error API configuration
ERROR_BASE_URL=http://localhost:3010
ERROR_API_VERSION=v1
ERROR_MAX_DETAIL_LENGTH=500
ERROR_ENABLE_TRACING=true

# =============================================================================
# DATA PROTECTION & PRIVACY
# =============================================================================
# PII Protection configuration
DATA_PROTECTION_PII_ENCRYPTION_KEY=dev-encryption-key-change-for-production-use-32-chars-minimum
DATA_PROTECTION_PII_TOKENIZATION_ENABLED=false
DATA_PROTECTION_PII_AUDITING_ENABLED=true
DATA_PROTECTION_PII_RETENTION_DAYS=365

# Compliance frameworks
DATA_PROTECTION_GDPR_ENABLED=false
DATA_PROTECTION_CCPA_ENABLED=false
DATA_PROTECTION_HIPAA_ENABLED=false

# =============================================================================
# DOPPLER CONFIGURATION (Optional - for secret management)
# =============================================================================
# Doppler project settings (used in app.module.ts)
DOPPLER_PROJECT=gs-scaffold-api
DOPPLER_CONFIG=dev_main

# =============================================================================
# DEVELOPMENT-SPECIFIC SETTINGS
# =============================================================================
# Development tools and debugging
DEBUG=*
DEVELOPMENT_MODE=true


# =============================================================================
# ADDITIONAL NOTES
# =============================================================================
# 1. For production, ensure all secrets are properly secured
# 2. Update DATA_PROTECTION_PII_ENCRYPTION_KEY with a strong 32+ character key
# 3. Configure proper Keycloak realm and client settings
# 4. Set up proper CORS origins for your frontend applications
# 5. Configure external logging systems (Loki/Elasticsearch) if needed
# 6. Review and enable compliance frameworks as required
# =============================================================================
