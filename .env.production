# Production environment configuration for centralized logging strategy
# Copy this to .env.production for production deployments

# ==============================================
# APPLICATION CONFIGURATION
# ==============================================
APP_NAME=gs-scaffold
APP_VERSION=0.0.1
NODE_ENV=production
PORT=3010

# ==============================================
# PRODUCTION LOGGING CONFIGURATION
# ==============================================

# For production: Use stdout and ship with Promtail/Filebeat for best resilience
LOG_SINK=stdout
LOG_LEVEL=info
PRETTY_LOGS=false

# ==============================================
# OBSERVABILITY STACK ENDPOINTS
# ==============================================

# Loki endpoint (for direct push if needed in staging)
# LOKI_URL=https://loki.yourdomain.com
# LOKI_BASIC_AUTH=username:password

# Elasticsearch endpoint (for direct push if needed)
# ES_NODE=https://elasticsearch.yourdomain.com:9200
# ES_INDEX=gs-scaffold-production-logs

# ==============================================
# SECURITY CONSIDERATIONS
# ==============================================

# These should be provided by your orchestration platform (Kubernetes secrets, etc.)
# Never commit actual secrets to version control

# Example Kubernetes ConfigMap/Secret structure:
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: gs-scaffold-logging-config
# data:
#   LOG_SINK: "stdout"
#   LOG_LEVEL: "info"
#   PRETTY_LOGS: "false"
#   APP_NAME: "gs-scaffold"
#   NODE_ENV: "production"

# Example for monitoring log volume and performance
# Add these labels for log aggregation:
# LOG_LABELS=service:gs-scaffold,tier:production,region:us-east-1
