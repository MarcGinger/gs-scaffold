# Environment configuration for centralized logging strategy
# Copy this to .env for local development

# ==============================================
# APPLICATION CONFIGURATION
# ==============================================
APP_NAME=gs-scaffold
APP_VERSION=0.0.1
NODE_ENV=development
PORT=3010

# ==============================================
# LOGGING CONFIGURATION
# ==============================================

# LOG_SINK options: stdout|console|loki|elasticsearch
# - stdout: JSON to stdout (recommended for production with Promtail/Filebeat)
# - console: Human-readable console output
# - loki: Direct push to Loki (good for staging)
# - elasticsearch: Direct push to Elasticsearch
LOG_SINK=loki

# LOG_LEVEL options: debug|info|warn|error|fatal
LOG_LEVEL=info

# Enable pretty printing for local development
PRETTY_LOGS=true

# ==============================================
# LOKI CONFIGURATION (when LOG_SINK=loki)
# ==============================================
LOKI_URL=http://loki:3100
# LOKI_BASIC_AUTH=username:password  # Uncomment if Loki has auth enabled

# ==============================================
# ELASTICSEARCH CONFIGURATION (when LOG_SINK=elasticsearch)
# ==============================================
# ES_NODE=http://elasticsearch:9200
# ES_INDEX=gs-scaffold-logs

# ==============================================
# DOCKER ENVIRONMENT OVERRIDES
# ==============================================
# These are set in docker-compose.yaml but can be overridden here

# For production, use stdout and ship with Promtail
# LOG_SINK=stdout
# PRETTY_LOGS=false
# LOG_LEVEL=info

# ==============================================
# DEVELOPMENT TIPS
# ==============================================
# 
# For local development with pretty logs:
# LOG_SINK=console
# PRETTY_LOGS=true
# LOG_LEVEL=debug
#
# For production deployment:
# LOG_SINK=stdout
# PRETTY_LOGS=false
# LOG_LEVEL=info
#
# For staging with direct Loki:
# LOG_SINK=loki
# LOKI_URL=https://your-loki-instance.com
# LOG_LEVEL=info
