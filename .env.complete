# Environment Configuration Template - COMPLETE
# This file contains ALL environment variables used in app-config.util.ts
# Copy this file to .env and configure the values for your environment

# =============================================================================
# CORE APPLICATION SETTINGS
# =============================================================================

# Application environment (production, staging, development, test)
NODE_ENV=development

# Application identification
APP_NAME=gs-scaffold
APP_VERSION=0.0.1

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Server protocol (http, https)
PROTOCOL=http

# Server host binding
HOST=localhost

# Server port
PORT=3000

# Public API URL (used for external/shareable links, especially in production)
PUBLIC_API_URL=

# Staging API URL (for development reference)
STAGING_API_URL=

# =============================================================================
# CONTAINER/KUBERNETES SETTINGS
# =============================================================================

# Container environment detection
DOCKER_CONTAINER=
CONTAINER_HOST=
HOSTNAME=

# Kubernetes service discovery
KUBERNETES_SERVICE_HOST=

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL connection settings
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_NAME=postgres
DATABASE_USER=postgres
DATABASE_PASSWORD=

# Alternative: single database URL (overrides individual settings above)
DATABASE_URL=

# Database SSL settings
DATABASE_SSL=false
DATABASE_SSL_REJECT_UNAUTHORIZED=true

# Connection pool settings
DATABASE_POOL_MIN=0
DATABASE_POOL_MAX=10

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Logging level (fatal, error, warn, info, debug, trace, silent)
LOGGER_LEVEL=info
LOG_LEVEL=info
PINO_LOG_LEVEL=info

# Logging output destination (stdout, console, loki, elasticsearch)
LOG_SINK=stdout

# Pretty print logs (true/false) - disable in production
PRETTY_LOGS=false

# =============================================================================
# CENTRALIZED LOGGING SERVICES
# =============================================================================

# Loki configuration (when LOG_SINK=loki)
LOKI_URL=
LOKI_BASIC_AUTH=

# Elasticsearch configuration (when LOG_SINK=elasticsearch)
ES_NODE=
ES_INDEX=app-logs

# =============================================================================
# CONFIGURATION SUMMARY
# =============================================================================
# Total environment variables: 24
# 
# Categories:
# - Core Application: NODE_ENV, APP_NAME, APP_VERSION
# - Server: PROTOCOL, HOST, PORT, PUBLIC_API_URL, STAGING_API_URL
# - Container/K8s: DOCKER_CONTAINER, CONTAINER_HOST, HOSTNAME, KUBERNETES_SERVICE_HOST
# - Database: DATABASE_HOST, DATABASE_PORT, DATABASE_NAME, DATABASE_USER, 
#             DATABASE_PASSWORD, DATABASE_URL, DATABASE_SSL, DATABASE_SSL_REJECT_UNAUTHORIZED,
#             DATABASE_POOL_MIN, DATABASE_POOL_MAX
# - Logging: LOGGER_LEVEL, LOG_LEVEL, PINO_LOG_LEVEL, LOG_SINK, PRETTY_LOGS,
#            LOKI_URL, LOKI_BASIC_AUTH, ES_NODE, ES_INDEX
